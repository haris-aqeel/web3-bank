{
  "address": "0xd5B9aA471Eec0787Ed3283331a38614e51341524",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Bank__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundersAddress",
          "type": "address"
        }
      ],
      "name": "getFunderBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xee15e29de349ed7f7096802bf63eef6a5bf239eaf36445d0a78d40ee4aded504",
  "receipt": {
    "to": null,
    "from": "0xe1537A8013428dc8134D53BAACE198840E431589",
    "contractAddress": "0xd5B9aA471Eec0787Ed3283331a38614e51341524",
    "transactionIndex": 10,
    "gasUsed": "565474",
    "logsBloom": "0x
    "blockHash": "0x34490c805b766583b76f0469572e55887b78877ca6f3b6c99d1d38cd60444c05",
    "transactionHash": "0xee15e29de349ed7f7096802bf63eef6a5bf239eaf36445d0a78d40ee4aded504",
    "logs": [],
    "blockNumber": 11377316,
    "cumulativeGasUsed": "10036891",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "22f592d4efae7fa8c9900c293bee5a7d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Bank__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundersAddress\",\"type\":\"address\"}],\"name\":\"getFunderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Haris Aqeel\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Bank Contract Recieves Amount and Allows to Withdraw the Amount\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"deposit function allows the funders to fund this bank contract\"},\"getContractBalance()\":{\"notice\":\"getContractBalance function returns the balance of contract to the owner\"},\"getFunderBalance(address)\":{\"notice\":\"getFunderBalance function returns the balance of funder\"},\"withdraw()\":{\"notice\":\"Owner is able to withdraw funds present in this contract (Bank)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bank.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nerror Bank__NotOwner();\\r\\n\\r\\n/** \\r\\n    @title Bank Contract Recieves Amount and Allows to Withdraw the Amount\\r\\n    @author Haris Aqeel\\r\\n*/\\r\\n\\r\\ncontract Bank {\\r\\n    address immutable owner;\\r\\n    address[] private funders;\\r\\n    uint8 constant MINIMUM_AMOUNT = 0;\\r\\n    mapping(address => uint256) private balances;\\r\\n\\r\\n    // constructor\\r\\n    // receive function (if exists)\\r\\n    // fallback function (if exists)\\r\\n    // external\\r\\n    // public\\r\\n    // internal\\r\\n    // private\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != owner) revert Bank__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        deposit();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        deposit();\\r\\n    }\\r\\n\\r\\n    /** \\r\\n        @notice getContractBalance function returns the balance of contract to the owner\\r\\n    */\\r\\n    function getContractBalance() external view onlyOwner returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    /** \\r\\n        @notice getFunderBalance function returns the balance of funder\\r\\n    */\\r\\n    function getFunderBalance(address fundersAddress)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return balances[fundersAddress];\\r\\n    }\\r\\n\\r\\n    /** \\r\\n        @notice deposit function allows the funders to fund this bank contract\\r\\n    */\\r\\n    function deposit() public payable {\\r\\n        require(msg.value > MINIMUM_AMOUNT, \\\"Amount Entered is Lesser!\\\");\\r\\n        funders.push(msg.sender);\\r\\n        balances[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    /** \\r\\n        @notice Owner is able to withdraw funds present in this contract (Bank)\\r\\n    */\\r\\n    function withdraw() public payable onlyOwner {\\r\\n        address[] memory balanceFunders = funders;\\r\\n\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < balanceFunders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = balanceFunders[funderIndex];\\r\\n            balances[funder] = 0;\\r\\n        }\\r\\n\\r\\n        funders = new address[](0);\\r\\n        (bool success, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(success, \\\"Call to Withdraw Funds Failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9d04594f8d872e8c2a8354668de7c1a10387673e52939d89023bb19d9203a212\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161094f610067600039600081816101db0152610481015261094f6000f3fe6080604052600436106100435760003560e01c80633ccfd60b1461005c5780636f9fb98a14610066578063b8b3d85b14610091578063d0e30db0146100ce57610052565b36610052576100506100d8565b005b61005a6100d8565b005b6100646101d9565b005b34801561007257600080fd5b5061007b61047d565b6040516100889190610613565b60405180910390f35b34801561009d57600080fd5b506100b860048036038101906100b39190610691565b61050a565b6040516100c59190610613565b60405180910390f35b6100d66100d8565b005b600060ff16341161011e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101159061071b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101d0919061076a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517fb731e42600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610297575b5050505050905060005b815181101561036c576000828281518110610309576103086107c0565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610364906107ef565b9150506102eb565b50600067ffffffffffffffff81111561038857610387610838565b5b6040519080825280602002602001820160405280156103b65781602001602082028036833780820191505090505b50600090805190602001906103cc929190610553565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f390610898565b60006040518083038185875af1925050503d8060008114610430576040519150601f19603f3d011682016040523d82523d6000602084013e610435565b606091505b5050905080610479576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610470906108f9565b60405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610504576040517fb731e42600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8280548282559060005260206000209081019282156105cc579160200282015b828111156105cb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610573565b5b5090506105d991906105dd565b5090565b5b808211156105f65760008160009055506001016105de565b5090565b6000819050919050565b61060d816105fa565b82525050565b60006020820190506106286000830184610604565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065e82610633565b9050919050565b61066e81610653565b811461067957600080fd5b50565b60008135905061068b81610665565b92915050565b6000602082840312156106a7576106a661062e565b5b60006106b58482850161067c565b91505092915050565b600082825260208201905092915050565b7f416d6f756e7420456e7465726564206973204c65737365722100000000000000600082015250565b60006107056019836106be565b9150610710826106cf565b602082019050919050565b60006020820190508181036000830152610734816106f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610775826105fa565b9150610780836105fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b5576107b461073b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107fa826105fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561082d5761082c61073b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610882600083610867565b915061088d82610872565b600082019050919050565b60006108a382610875565b9150819050919050565b7f43616c6c20746f2057697468647261772046756e6473204661696c6564000000600082015250565b60006108e3601d836106be565b91506108ee826108ad565b602082019050919050565b60006020820190508181036000830152610912816108d6565b905091905056fea26469706673582212205866358c3c6082460fe9f4e41fe86aead0c5e41a0d207b4df2ac78b7a85c84eb64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633ccfd60b1461005c5780636f9fb98a14610066578063b8b3d85b14610091578063d0e30db0146100ce57610052565b36610052576100506100d8565b005b61005a6100d8565b005b6100646101d9565b005b34801561007257600080fd5b5061007b61047d565b6040516100889190610613565b60405180910390f35b34801561009d57600080fd5b506100b860048036038101906100b39190610691565b61050a565b6040516100c59190610613565b60405180910390f35b6100d66100d8565b005b600060ff16341161011e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101159061071b565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101d0919061076a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517fb731e42600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156102e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610297575b5050505050905060005b815181101561036c576000828281518110610309576103086107c0565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610364906107ef565b9150506102eb565b50600067ffffffffffffffff81111561038857610387610838565b5b6040519080825280602002602001820160405280156103b65781602001602082028036833780820191505090505b50600090805190602001906103cc929190610553565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103f390610898565b60006040518083038185875af1925050503d8060008114610430576040519150601f19603f3d011682016040523d82523d6000602084013e610435565b606091505b5050905080610479576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610470906108f9565b60405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610504576040517fb731e42600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8280548282559060005260206000209081019282156105cc579160200282015b828111156105cb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610573565b5b5090506105d991906105dd565b5090565b5b808211156105f65760008160009055506001016105de565b5090565b6000819050919050565b61060d816105fa565b82525050565b60006020820190506106286000830184610604565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065e82610633565b9050919050565b61066e81610653565b811461067957600080fd5b50565b60008135905061068b81610665565b92915050565b6000602082840312156106a7576106a661062e565b5b60006106b58482850161067c565b91505092915050565b600082825260208201905092915050565b7f416d6f756e7420456e7465726564206973204c65737365722100000000000000600082015250565b60006107056019836106be565b9150610710826106cf565b602082019050919050565b60006020820190508181036000830152610734816106f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610775826105fa565b9150610780836105fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b5576107b461073b565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006107fa826105fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561082d5761082c61073b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610882600083610867565b915061088d82610872565b600082019050919050565b60006108a382610875565b9150819050919050565b7f43616c6c20746f2057697468647261772046756e6473204661696c6564000000600082015250565b60006108e3601d836106be565b91506108ee826108ad565b602082019050919050565b60006020820190508181036000830152610912816108d6565b905091905056fea26469706673582212205866358c3c6082460fe9f4e41fe86aead0c5e41a0d207b4df2ac78b7a85c84eb64736f6c63430008090033",
  "devdoc": {
    "author": "Haris Aqeel",
    "kind": "dev",
    "methods": {},
    "title": "Bank Contract Recieves Amount and Allows to Withdraw the Amount",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit()": {
        "notice": "deposit function allows the funders to fund this bank contract"
      },
      "getContractBalance()": {
        "notice": "getContractBalance function returns the balance of contract to the owner"
      },
      "getFunderBalance(address)": {
        "notice": "getFunderBalance function returns the balance of funder"
      },
      "withdraw()": {
        "notice": "Owner is able to withdraw funds present in this contract (Bank)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/Bank.sol:Bank",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 16,
        "contract": "contracts/Bank.sol:Bank",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}